package no.ssb.kostra.control.famvern.s53;

import no.ssb.kostra.control.Constants;
import no.ssb.kostra.control.ErrorReport;
import no.ssb.kostra.control.FieldDefinition;
import no.ssb.kostra.controlprogram.Arguments;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class MainITest {
    InputStream sysInBackup;
    private Arguments args;
    private ErrorReport er;
    private String inputFileContent;
    private List<FieldDefinition> fieldDefinitions;


    @Before
    public void beforeTest() {
        inputFileContent =
                //@formatter:off
                //0000000011111111112222222222333333333344444444445555555555666666666677777777778888888
                //2345678901234567890123456789012345678901234567890123456789012345678901234567890123456
                "3002300500070002000300080009000300040004000500030004000100020\n" +
                "300240050007bbb2000300080009000300040004000500030004000100020\n" +
                "0101700500070002000300080009000300040004000500030004000100020\n" +
                "30   00500070002000300080009000300040004000500030004000100020\n" +
                "3002100500070002000300080009000300040004000500030004000100020\n" +
                "3003800500070002000300080009000300040004000500030004000100020\n" +
                "30 2800500070002000300080009000300040004000500030004000100020\n" +
                "03030    0070002000300080009000300040004000500030004000100020\n" +
                "030370050    002000300080009000300040004000500030004000100020\n" +
                "0303800500070    00300080009000300040004000500030004000100020\n" +
                "03039005000700020    0080009000300040004000500030004000100020\n" +
                "340450050007000200030    009000300040004000500030004000100020\n" +
                "3405200500070002000300080    00300040004000500030004000100020\n" +
                "30061005000700020003000800090    0040004000500030004000100020\n" +
                "300650050007000200030008000900030    004000500030004000100020\n" +
                "3807100500070002000300080009000300040    00500030004000100020\n" +
                "38073005000700020003000800090003000400040    0030004000100020\n" +
                "380810050007000200030008000900030004000400050    004000100020\n" +
                "3808200500070002000300080009000300040004000500030    00100020\n" +
                "42091005000700020003000800090003000400040005000300040    0020\n" +
                "421010050007000200030008000900030004000400050003000400010    \n" +
                "1111100500070002000300080009000300040004000500030004000100020\n" +
                "1111200500070002000300080009000300040004000500030004000100020\n" +
                "4612500500070002000300080009000300040004000500030004000100020\n" +
                "4612700500070020000300080009000300040004000500030004000100020\n" +
                "4614100500070002000300080009000300040004000500030004000100020\n" +
                "46142005000700020dddd0080009000300040004000500030004000100020\n" +
                "1515100500070002000300080009000300040004000600030004000100020\n" +
                "1515200500070002000300080009000300040004000500030004000100020\n" +
                "1515300500070002000300080009000300040004000500030004000100020\n" +
                "5016200500070002000300080009000300040004000500030004000100020\n" +
                "5017100500070002000300080009000300040004000500030004000100020\n" +
                "5017200500070002000300080009000300040004000500030004000100020\n" +
                "1818100500070002000300080009000300040004000500030004000100020\n" +
                "1818300500070002000300080009000300040004000500030004000100020\n" +
                "1818400500070002000300080009000300040004000500030000400100020\n" +
                "1818500500070002000300080009000300040004000500030004000100020\n" +
                "5419200500070002000300080009000300040004000500030004000100020\n" +
                "5419300500070002000300080009000300040004000500030004000100020\n" +
                "5419400500070002000300080009000300040004000500030004000100020\n" +
                "5420200500070002000300080009000300040004000500030004000100020\n" +
                "5420300500070002000300080009000300040004000500030004000100020\n" +
                "1818500500070002000300080009000300040004000500030004000100020\n" +
                "5419400000000000000000000000000000000000000000000000000000000\n" +
                "5420300000070002000300080009000300090004000500030004000200000\n" +
                "5420500500070002000300080009000300040004000500030004000100020";

        //@formatter:on

        sysInBackup = System.in; // backup System.in to restore it later
        ByteArrayInputStream in = new ByteArrayInputStream(inputFileContent.getBytes(StandardCharsets.ISO_8859_1));
        System.setIn(in);

        fieldDefinitions = FieldDefinitions.getFieldDefinitions();

        args = new Arguments(new String[]{"-s", "53F", "-y", "2020", "-r", "667600"});
    }

    @After
    public void afterTest() {
        System.setIn(sysInBackup);
    }

    @Test
    public void testDoControl() {
        er = Main.doControls(args);

        if (Constants.DEBUG) {
            System.out.print(er.generateReport());
        }

        assertNotNull("Has content ErrorReport", er);
        assertEquals(Constants.CRITICAL_ERROR, er.getErrorType());
    }

}
