package no.ssb.kostra.control.famvern.s55;

import no.ssb.kostra.control.Constants;
import no.ssb.kostra.control.ErrorReport;
import no.ssb.kostra.control.FieldDefinition;
import no.ssb.kostra.controlprogram.Arguments;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class MainITest {
    InputStream sysInBackup;
    private Arguments args;
    private ErrorReport er;
    private String inputFileContent;
    private List<FieldDefinition> fieldDefinitions;


    @Before
    public void beforeTest() {
        inputFileContent =
                //@formatter:off
                //00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111122222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222223333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444455555555555555555555555555555555555555555555555555555555555555555555555555555555555555


                "30            Viken01705010010002502000506508001503500503003000650903122003510091200200049100501540407043009910790901100200041150019105015002007575150050200025003060685099100001009010002000310200500500151010070020040014025759595290030050075055021000960225033003400991200140034002515015003250201001000220005030040007550616017101808210002000118042304500991045055210502400600210041005025605006001501252500900300370902035145010070015009506100281010009910150300300075025075055015501004005001009580302050050550150075015002800180061013804501832111000311139040017975251001081100218067103200991\n" +
n" +
                "30         OK-ish..02301002003000600501002003000600501002003000600510203006005010020030006000500500100015003000250400500090040050009004005000904050090040050009002000250036001002003004001000100200300400100010020030040010010203040100010020030040010000500100015002000500010010002001002003000600100200300060010020030006010203006001002003000600050010001500300001002003040050015040030020009004003002000900400300200090403020090040030020009002000150010003600100200300060010020030006001002003000601020300600100200300060005001000150030002503500600250350060025035006025350600250350060012501750300\n" +
                "03         LittFeil03005010010002502000506508001503500503003000650903122003510091200200049100501540407043009910790901100200041150019105015002007575150050200025003060685099100001009010002000310200500500151010070020040014025759595290030050075055021000960225033003400991200140034002515015003250201001000220005030040007550616017101808210002000118042304500991045055210502400600210041005025605006001501252500900300370902035145010070015009506100281010001000015030030007502507505501550100400500100958030205005055015007501500280027010001380450183211100031113904001797525100108110021806710320099\n" +
                "99         HeltFeil
        //@formatter:on

        sysInBackup = System.in; // backup System.in to restore it later
        ByteArrayInputStream in = new ByteArrayInputStream(inputFileContent.getBytes(StandardCharsets.ISO_8859_1));
        System.setIn(in);

        fieldDefinitions = FieldDefinitions.getFieldDefinitions();

        args = new Arguments(new String[]{"-s", "55F", "-y", "2020", "-r", "667600"});
    }

    @After
    public void afterTest() {
        System.setIn(sysInBackup);
    }

    @Test
    public void testDoControl() {
        er = Main.doControls(args);

        if (Constants.DEBUG) {
            System.out.print(er.generateReport());
        }

        assertNotNull("Has content ErrorReport", er);
        assertEquals(Constants.NORMAL_ERROR, er.getErrorType());
    }
}
