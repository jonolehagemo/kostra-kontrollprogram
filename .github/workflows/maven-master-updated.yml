# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Push to Master

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 13.0.2
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: "${{ github.actor }}"
        server-password: "${{ secrets.GITHUB_TOKEN }}"
        repository-id: "github"
        repository-url: "https://github.com/${{github.repository}}/"
        plugin_repository-id: "github"
        plugin_repository-url: "https://github.com/${{github.repository}}/"
        
    - name: Show settings.xml made by setup JDK
      run: cat ~/.m2/settings.xml

    - name: Configure Git user
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"

    - name: Setup settings.xml
      uses: whelk-io/maven-settings-xml-action@v14
      with:
        repositories: '[{ "id": "github", "url": "https://github.com/${{github.repository}}/" }]'
        plugin_repositories: '[{ "id": "github", "url": "https://github.com/${{github.repository}}/" }]'
        servers: '[{ "id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.GITHUB_TOKEN }}" }]'

    - name: Show settings.xml made by Setup settings.xml
      run: cat ~/.m2/settings.xml

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn -B release:prepare release:perform
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is the default env for the password
